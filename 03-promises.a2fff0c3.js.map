{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,SAAS,IAGE,CACXC,KAAMC,SAASC,cAAc,SAG1BF,KAAKG,iBAAiB,UAI3B,SAAsBC,GACpBA,EAAMC,iBAENC,OAASC,OAAOH,EAAMI,cAAcF,OAAOG,OAC3CC,EAAaH,OAAOH,EAAMI,cAAcG,MAAMF,OAC9CG,UAAYL,OAAOH,EAAMI,cAAcK,KAAKJ,OAE5C,IAAK,IAAIK,EAAI,EAAGA,GAAKR,OAAQQ,IAC3BC,EAAcD,EAAGJ,GACdM,MAAK,SAAAC,G,OAAUC,QAAQC,IAAIF,E,IAC3BG,OAAM,SAAAC,G,OAASH,QAAQC,IAAIE,E,IAC9BX,GAAcE,S,IAblB,IAAIF,EAAa,EAiBjB,SAASK,EAAcO,EAAUX,GAC/B,OAAO,IAAIY,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EACE7B,EAAAE,OAAOiC,QAAQ,uBAAwCC,OAAfT,EAAS,QAAYS,OAANpB,EAAM,QAG/Dc,EAAO9B,EAAAE,OAAOmC,QAAQ,sBAAqCD,OAAfT,EAAS,QAAYS,OAANpB,EAAM,O,GAElEA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  useIcon: false,\n});\n\nconst resf = {\n  form: document.querySelector('form'),\n};\n\nresf.form.addEventListener('submit', onFormSubmit);\n\nlet startDelay = 0;\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  amount = Number(event.currentTarget.amount.value);\n  startDelay = Number(event.currentTarget.delay.value);\n  delayStep = Number(event.currentTarget.step.value);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, startDelay)\n      .then(result => console.log(result))\n      .catch(error => console.log(error));\n    startDelay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((reslove, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        reslove(\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n        );\n      } else {\n        reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","Notify","init","useIcon","form","document","querySelector","addEventListener","event","preventDefault","amount","Number","currentTarget","value","$ce04d3a99e08e73b$var$startDelay","delay","delayStep","step","i","$ce04d3a99e08e73b$var$createPromise","then","result","console","log","catch","error","position","Promise","reslove","reject","shouldResolve","Math","random","setTimeout","success","concat","failure"],"version":3,"file":"03-promises.a2fff0c3.js.map"}